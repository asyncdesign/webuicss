
:root {
	--layer-none: z-index: auto;
	--layer-0: z-index: 0;
	--layer-1: z-index: 100;
	--layer-2: z-index: 200;
	--layer-3: z-index: 300;
	--layer-4: z-index: 400;
	--layer-5: z-index: 500;
	--layer-6: z-index: 600;
	--layer-7: z-index: 700;
	--layer-8: z-index: 800;
	--layer-9: z-index: 900;
	--layer-top: z-index: 1000;
}

* {
	outline: none;
}

html {
	font-family: var(--font-sans);
}

body {
	color: var(--color);
	background-color: var(--background);
}

input,
button,
select,
datalist,
textarea,
meter,
progress {
	font: inherit;
	min-height: 1.25rem;
}
select {
	appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
	background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='hsl(0, 0%, 0%)' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
	background-position: center right 0.625rem;
	background-repeat: no-repeat;
	background-size: 0.75rem;
	padding-right: 2rem;
}
.dark select {
	background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='hsl(0, 0%, 100%)' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
}
select[multiple] option { 
  display: flex;
  align-items: center;
  min-height: 1.5rem;
  padding: 0.125rem 0.625rem 0.125rem 0.625rem;
}
a:not([class^="button-link"]) {
	padding: 0 0.075rem;
}
textarea {
	resize: vertical;
	overflow: auto;
}
h1 {
	font-size: 1.7em;
}
h2 {
	font-size: 1.5em;
}
h3 {
	font-size: 1.3em;
}
h4 {
	font-size: 1.1em;
}
label {
	display: inline-block;
}
details,
summary,
main {
	display: block;
}
blockquote {
	border-left: 0.438rem solid var(--accent);
	margin: 0.938rem 0 0.938rem 0;
	padding: 0.625rem 0.625rem 0.625rem 1.25rem;
}
strong {
	color: var(--accent);
	font-weight: bold;
}
code {
	color: var(--accent);
	font-size: 1.25em;
}
mark {
	background-color: var(--accent);
}
template {
	display: none;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
svg:not(:root) {
	overflow: hidden; 
}
.container {
	display: block;
	position: relative;
	padding: 0;
}
.container::after {
	content: "";
	display: block;
	clear: both;
}
.table {
	table-layout: fixed;
	width: 100%;
	border-collapse: collapse;
  color: var(--data-text);
  background-color: var(--data-background);
}
.table.layout-auto {
	table-layout: auto;
}
.table.layout-fixed {
	table-layout: fixed;
}
.table.bordered td {
	border: 0.05rem solid var(--data-border);
}
.table.head-bordered th {
	border: 0.05rem solid var(--data-border);
}
.table thead tr {
  border-bottom: 0.05rem solid var(--data-border);
}
.table.striped tr:nth-child(odd):not(thead tr, tfoot tr) {
  background-color: var(--data-alternate-background);
}
.table.hover tr:not(thead tr, tfoot tr):hover {
  background-color: var(--data-background-hover);
}


.list {
	padding: 0;
	margin: 0;
	list-style-type: none;
}
.list-bullet {
	padding-left: 0.938rem;
	list-style-type: disc;
}
.list-bullet-square {
	padding-left: 0.938rem;
	list-style-type: square;
}
.list-alpha {
	padding-left: 0.938rem;
	list-style-type: lower-alpha;
}
.list-alpha-upper {
	padding-left: 0.938rem;
	list-style-type: upper-alpha;
}
.list-number {
	padding-left: 0.938rem;
	list-style-type: decimal;
}
.nav-links > a,
.nav-links > *:not(a) > a {
	color: var(--accent);
}
.nav-links > a,
.nav-links > :not(a) > a {
	text-decoration: none;
}
.nav-links > a:last-child,
.nav-links > :last-child > a {
	cursor: default;
	color: var(--disabled-text);
}
.nav-links > a:not(:last-child)::after,
.nav-links > :not(:last-child) > a::after {
	content: "/";
	padding-left: 0.625rem;
	padding-right: 0.625rem;
	color: var(--disabled-text);
}
.input,
.input-xs,
.input-sm,
.input-md,
.input-lg,
.input-xl {	
	color: var(--input-text);
	background-color: var(--input-background);
	border: 0.063rem solid var(--input-border);
	padding: 0 0.625rem 0.125rem 0.625rem;
}
*[class^=input]:focus {
	background-color: var(--input-background-focus);
}

.button,
.button-xs,
.button-sm,
.button-md,
.button-lg,
.button-xl {
	text-decoration: none;
	white-space: nowrap;
	color: var(--control-text);
	background-color: var(--control-background);
	border: 0.063rem solid var(--control-border);
	padding: 0 0.75rem 0.125rem 0.75rem;
}

*[class^=button].button-outline {
	color: var(--control-border);
	background-color: transparent;
	border: 0.063rem solid var(--control-border);
	box-shadow: inset 0 0 0 0.063rem var(--control-border);
}

*[class^=button].button-link {
	display: inline-block;
	text-align: center;
	text-decoration: none;
	cursor: pointer;
}

*[class^=button]:hover {
	color: var(--control-text);
  background-color: var(--control-background-hover);
}
*[class^=button]:focus {
	color: var(--control-text);
  background-color: var(--control-background-focus);
}
*[class^=button]:active {
	color: var(--control-text);
  background-color: var(--control-background-active);
}


*[class^="checkbox"] input,
*[class^="radio"] input,
*[class^="toggle-button"] input,
*[class^="toggle-switch"] input {
	position: absolute;
	opacity: 0;
	width: 0;
	height: 0;
	z-index: -1;
	visibility: hidden;
}

.checkbox {
  width: 1.25rem;
  height: 1.25rem;
  position: relative;
}
.checkbox label {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  border: 0.063rem solid var(--input-border);
}
.checkbox label:not([class*=bg-]) {
  background-color: var(--input-background);
}
.checkbox label:focus {
  background-color: var(--input-background-focus);
}
.checkbox input[type=checkbox]:checked + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='hsl(0, 0%, 0%)' d='M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z'/></svg>");
  background-repeat: no-repeat;
  background-origin: padding-box;
  background-size: 100%;
}
.dark .checkbox input[type=checkbox]:checked + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='hsl(0, 0%, 100%)' d='M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z'/></svg>");
}
.checkbox input[type=checkbox]:indeterminate + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='hsl(0, 0%, 0%)' d='M 6 10 h 12 v 4 h -12 Z'/></svg>");
  background-repeat: no-repeat;
  background-origin: padding-box;
  background-size: 100%;
}
.dark .checkbox input[type=checkbox]:indeterminate + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='hsl(0, 0%, 100%)' d='M 6 10 h 12 v 4 h -12 Z'/></svg>");
}
.checkbox input[type=checkbox][disabled]:checked + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='hsl(0, 0%, 63.1%)' d='M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z'/></svg>");
}
.checkbox input[type=checkbox][disabled]:indeterminate + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='hsl(0, 0%, 63.1%)' d='M 6 10 h 12 v 4 h -12 Z'/></svg>");
}
.radio {
  width: 1.25rem;
  height: 1.25rem;
  position: relative;
}
.radio label {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  border-radius: 50%;
  border: 0.063rem solid var(--input-border);
}
.radio label:not([class*=bg-]) {
  background-color: var(--input-background);
}
.radio label:focus {
  background-color: var(--input-background-focus);
}
.radio input[type=radio]:checked + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><circle fill='hsl(0, 0%, 0%)' cx='12' cy='12' r='7'/></svg>");
  background-repeat: no-repeat;
  background-origin: padding-box;
  background-size: 100%;
}
.dark .radio input[type=radio]:checked + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><circle fill='hsl(0, 0%, 100%)' cx='12' cy='12' r='7'/></svg>");
}
.radio input[type=radio][disabled]:checked + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><circle fill='hsl(0, 0%, 63.1%)' cx='12' cy='12' r='7'/></svg>");
}

*[class^=toggle-button] label {
  color: var(--control-text);
  background-color: var(--control-background);
  border: 0.063rem solid var(--control-border);
}
*[class^=toggle-button] input:checked + label {
  background-color: var(--control-background-active);
}
*[class^=toggle-button] input + label:focus {
  background-color: var(--control-background-focus);
}
.toggle-button label {
  padding: 0 0.75rem 0.125rem 0.75rem;
}


*[class^=toggle-switch] {
  position: relative;
  width: 2.7rem;
  height: 1.5rem;
  line-height: 1.5rem;
}
*[class^=toggle-switch] label {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  font-size: 1rem;
  text-decoration: none;
  white-space: nowrap;
  border: 0.063rem solid var(--control-border);
  cursor: default;
}
*[class^=toggle-switch] label .toggle-switch-button {
  position: absolute;
  top: 8%;
  left: 0.2rem;
  height: 84%;
  border-radius: inherit;
	transition: left 0.4s ease-in;
  /*box-shadow: none !important;*/
}
*[class^=toggle-switch] label::before {
  text-align: center;
  color: inherit;
  left: 0;
}
*[class^=toggle-switch] label::after {
  text-align: center;
  color: inherit;
  right: 0;
}
*[class^=toggle-switch].check label::before {
  content: "âœ“";
  font-size: 1rem;
  width: 50%;
}
*[class^=toggle-switch].check label::after {
  content: "âœ—";
  font-size: 1rem;
  width: 50%;
}
*[class^=toggle-switch].onoff label::before {
  content: "ON";
  font-size: 0.7rem;
  font-weight: 600;
  width: 45%;
}
*[class^=toggle-switch].onoff label::after {
  content: "OFF";
  font-size: 0.7rem;
  font-weight: 600;
  width: 55%;
}
*[class^=toggle-switch].yesno label::before {
  content: "YES";
  font-size: 0.7rem;
  font-weight: 600;
  width: 55%;
}
*[class^=toggle-switch].yesno label::after {
  content: "NO";
  font-size: 0.7rem;
  font-weight: 600;
  width: 45%;
}
*[class^=toggle-switch].darklight label::before {
  content: "â˜¾";
  font-size: 1rem;
  font-weight: 400;
  width: 45%;
}
*[class^=toggle-switch].darklight label::after {
  content: "â˜¼";
  font-size: 1rem;
  font-weight: 900;
  width: 55%;
}
.toggle-switch-xs {
  width: 4rem;
  height: 1.5rem;
  line-height: 1.5rem;
}
.toggle-switch-sm {
  width: 5rem;
  height: 1.75rem;
  line-height: 1.75rem;
}
.toggle-switch-md {
  width: 5.5rem;
  height: 2.125rem;
  line-height: 2.125rem;
}
.toggle-switch-lg {
  width: 6rem;
  height: 2.475rem;
  line-height: 2.475rem;
}
.toggle-switch-xl {
  width: 6.5rem;
  height: 2.825rem;
  line-height: 2.825rem;
}
.toggle-switch label .toggle-switch-button {
  width: 1.15rem;
}
.toggle-switch-xs label .toggle-switch-button {
  width: 1.7rem;
}
.toggle-switch-sm label .toggle-switch-button {
  width: 2.2rem;
}
.toggle-switch-md label .toggle-switch-button {
  width: 2.4rem;
}
.toggle-switch-lg label .toggle-switch-button {
  width: 2.6rem;
}
.toggle-switch-xl label .toggle-switch-button {
  width: 2.8rem;
}
.toggle-switch input:checked + label .toggle-switch-button {
  left: 1.25rem;
}
.toggle-switch-xs input:checked + label .toggle-switch-button {
  left: 2rem;
}
.toggle-switch-sm input:checked + label .toggle-switch-button {
  left: 2.4rem;
}
.toggle-switch-md input:checked + label .toggle-switch-button {
  left: 2.7rem;
}
.toggle-switch-lg input:checked + label .toggle-switch-button {
  left: 3rem;
}
.toggle-switch-xl input:checked + label .toggle-switch-button {
  left: 3.3rem;
}
*[class^=toggle-switch] input + label:not([class*=text-]) {
  color: var(--control-text);
}
*[class^=toggle-switch] input + label:not([class*=bg-]) {
  background-color: var(--control-background-inactive);
}
*[class^=toggle-switch] input:checked + label:not([class*=bg-]) {
  background-color: var(--control-background);
}
*[class^=toggle-switch] input + label > .toggle-switch-button:not([class*=bg-]) {
  background-color: var(--control-background-inactive-secondary);
}
*[class^=toggle-switch] input:checked + label > .toggle-switch-button:not([class*=bg-]) {
  background-color: var(--control-background-secondary);
}
*[class^=toggle-switch] input + label:not([class*=bg-]):focus {
  background-color: var(--control-background-focus);
}


.range {
	margin: 0;
	padding: 0;
	height: 1.25rem;
	background-color: transparent;
	color: var(--control-text);
	appearance: none;
}
.range::-webkit-slider-runnable-track {
	height: 0.3rem;
	background-color: var(--control-background);
}
.range:focus::-webkit-slider-runnable-track {
	background-color: var(--control-background-focus);
}
.range::-webkit-slider-thumb {
	width: 0.75rem;
	height: 1.25rem;
	background-color: var(--control-background-secondary);
	outline: 1px solid var(--control-border);
	margin-top: -0.45rem;
	appearance: none;
}
.range:focus::-webkit-slider-thumb {
	background-color: var(--control-background-active);
}
.range:active::-webkit-slider-thumb {
	background-color: var(--control-background-active);
}
.range::-moz-range-track {
	height: 0.3rem;
	background-color: var(--control-background);
}
.range:focus::-moz-range-track {
	background-color: var(--control-background-focus);
}
.range::-moz-range-thumb {
	width: 0.75rem;
	height: 1.25rem;
	background-color: var(--control-background-secondary);
	outline: 1px solid var(--control-border);
	border: none;
	border-radius: 0;
	margin-top: -0.45rem;
}
.range:focus::-moz-range-thumb {
	background-color: var(--control-background-active);
}
.range:active::-moz-range-thumb {
	background-color: var(--control-background-active);
}
.range-series {
		display: flex;
		justify-content: space-between;
}
.range-series > * {
		width: 1.1rem;
		text-align: center;
}
.range.range-rounded::-webkit-slider-runnable-track {
	border-radius: 0.188rem;
} 
.range.range-rounded::-webkit-slider-thumb {
	width: 1.06rem;
	height: 1.06rem;
	border-radius: 50%;
	margin-top: -0.35rem;
}
.range.range-rounded::-moz-range-track {
	border-radius: 0.188rem;
}
.range.range-rounded::-moz-range-thumb {
	width: 1.08rem;
	height: 1.08rem;
	border-radius: 50%;
	margin-top: -0.35rem;
}

.progress {
	position: relative;
}
.progress > progress {
	background-color: var(--control-background);
	border: 1px solid var(--control-border);
	border-radius: inherit;
	height: 1.25rem;
	width: 100%;
	overflow: hidden;
}
.progress > progress::-webkit-progress-bar {
	background-color: var(--control-background);
}
.progress > progress::-webkit-progress-value {
	background-color: var(--control-background-secondary);
}
.progress > progress::-moz-progress-bar {
	background-color: var(--control-background-secondary);
}
.progress > .progress-label {
		display: block;
		position: absolute;
		top: 0;
		text-align: center;
		line-height: 1.25rem;
		width: 100%;
		color: var(--color-white);
		z-index: 100;
}

.off-canvas-left {
	transform: translate(-100%, 0);
}
.off-canvas-right {
	transform: translate(100%, 0);
}
.off-canvas-body {
	width: 100%;
}

.text-dropcap::first-letter {
  display: block;
  margin-right: 0.75rem;
  float: left;
  font-size: 4.5em;
	line-height: 1;
	margin-top: -6px;
}
.text p, .text pre, .text ul, .text ol, .text address, .text legend, .text .control, 
	p.text, pre.text, ul.text, ol.text, address.text, legend.text, .control.text {
	line-height: 1.7em;
}
.text .text-dropcap::first-letter, .text.text-dropcap::first-letter {
	font-size: 5em;
	margin-top: -2px;
}
.text a:not(.text-underline) {
	text-decoration: none;
}
.text-readable p, .text-readable pre, .text-readable ul, .text-readable ol, .text-readable address, .text-readable legend, .text-readable .control, 
	p.text-readable, pre.text-readable, ul.text-readable, ol.text-readable, address.text-readable, legend.text-readable, .control.text-readable {
	line-height: 1.5em;
}
.text-readable .text-dropcap::first-letter, .text-readable.text-dropcap::first-letter {
	font-size: 4.625em;
	margin-top: -4px;
}
.text-readable a:not(.text-underline) {
	text-decoration: none;
}
.text-normal p, .text-normal pre, .text-normal ul, .text-normal ol, .text-normal address, .text-normal legend, .text-normal .control, 
	p.text-normal, pre.text-normal, ul.text-normal, ol.text-normal, address.text-normal, legend.text-normal, .control.text-normal {
	line-height: normal;
}
.text-normal a {
	text-decoration: underline;
}
@supports (-moz-appearance: none) {
	.text-dropcap::first-letter {
		margin-top: 0.25rem;
		margin-bottom: 0.25rem;
	}
	.text .text-dropcap::first-letter, .text.text-dropcap::first-letter {
		margin-top: 0.5rem;
	}
	.text-readable .text-dropcap::first-letter, .text-readable.text-dropcap::first-letter {
		margin-top: 0.375rem;
	}
}
/*
.text-scalable-xs {
	@include interpolate(font-size, $settings_bp_1_over, $settings_bp_5_under, 0.56rem, 0.75rem);
}
.text-scalable-sm {
	@include interpolate(font-size, $settings_bp_1_over, $settings_bp_5_under, 0.66rem, 0.875rem);
}
.text-scalable-md {
	@include interpolate(font-size, $settings_bp_1_over, $settings_bp_5_under, 0.75rem, 1.1rem);
}
.text-scalable-lg {
	@include interpolate(font-size, $settings_bp_1_over, $settings_bp_5_under, 0.84rem, 1.25rem);
}
.text-scalable-xl {
	@include interpolate(font-size, $settings_bp_1_over, $settings_bp_5_under, 0.94rem, 1.5rem);
}
.text-scalable-mega {
	@include interpolate(font-size, $settings_bp_1_over, $settings_bp_5_under, 1.87rem, 2.5rem);
}
*/
.text-width-50 {
	width: 50ch;
}
.text-width-75 {
	width: 75ch;
}
.text-width-100 {
	width: 100ch;
}

.input-xs, .button-xs, .button-link-xs, .toggle-button-xs > label, .progress-xs, .range-xs {
	padding: 0 0.75rem 0.125rem 0.75rem;
}
.input-sm, .button-sm, .button-link-sm, .toggle-button-sm > label, .progress-sm, .range-sm {
	padding: 0.125rem 0.875rem 0.25rem 0.875rem;
}
.input-md, .button-md, .button-link-md, .toggle-button-md > label, .progress-md, .range-md {
	padding: 0.25rem 1rem 0.375rem 1rem;
}
.input-lg, .button-lg, .button-link-lg, .toggle-button-lg > label, .progress-lg, .range-lg {
	padding: 0.375rem 1.125rem 0.5rem 1.125rem;
}
.input-xl, .button-xl, .button-link-xl, .toggle-button-xl > label, .progress-xl, .range-xl {
	padding: 0.5rem 1.25rem 0.625rem 1.25rem;
}

select.input-xs {
	padding: 0 2rem 0.125rem 0.75rem;
}
select.input-sm {
	padding: 0.125rem 2rem 0.25rem 0.875rem;
}
select.input-md {
	padding: 0.25rem 2rem 0.375rem 1rem;
}
select.input-lg {
	padding: 0.375rem 2rem 0.5rem 1.125rem;
}
select.input-xl {
	padding: 0.5rem 2rem 0.625rem 1.25rem;
}


.control {
	color: var(--input-text);
	background-color: var(--input-background);
	border: 0.063rem solid var(--input-border);
	padding: 0.313rem 0.625rem;
}

.control-message {
	height: 1rem;
	visibility: hidden;
}

.control-label {
	line-height: 1rem;
}
.control-label-xxs {
	line-height: 1.25rem;
}
.control-label-xs {
	line-height: 1.5rem;
}
.control-label-sm {
	line-height: 1.75rem;
}
.control-label-md {
	line-height: 2.125rem;
}
.control-label-lg {
	line-height: 2.475rem;
}
.control-label-xl {
	line-height: 2.825rem;
}
.control-label-xxl {
	line-height: 3.125rem;
}

.control-hint,
.control-hint-border {
	position: relative;
}
.control-hint > input,
.control-hint-border > input,
.control-hint > textarea,
.control-hint-border > textarea {
	min-height: 2.475rem;
}
.control-hint > input ~ label,
.control-hint-border > input ~ label {
	position: absolute;
	left: 0.3rem;
	top: 50%;
	min-height: 1rem;
	padding: 0 0.5rem 0 0.5rem;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	border: none;
	pointer-events: none;
	transform-origin: 0 0;			
	transform: translate(0, -55%);
	transition: transform 0.3s ease-out;
}	
.control-hint > textarea ~ label,
.control-hint-border > textarea ~ label {
	position: absolute;
	left: 0.3rem;
	top: 0.5rem;
	min-height: 1rem;
	padding: 0 0.5rem 0 0.5rem;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	border: none;
	pointer-events: none;
	transform-origin: 0 0;
	transition: transform 0.3s ease-out;	
}
.control-hint > input ~ label,
.control-hint > textarea ~ label {
	background-color: transparent;
}
.control-hint > input::-moz-placeholder,
.control-hint-border > input::-moz-placeholder {
	color: transparent !important;
}
.control-hint > input::placeholder,
.control-hint-border > input::placeholder {
	color: transparent !important;
}
.control-hint > textarea::-moz-placeholder,
.control-hint-border > textarea::-moz-placeholder {
	color: transparent !important;
}
.control-hint > textarea::placeholder,
.control-hint-border > textarea::placeholder {
	color: transparent !important;
}
.control-hint > input:not(.input-xl):not(:-moz-placeholder-shown) {
	padding-top: 0.7rem;
	& ~ label {
  	transform: scale(0.8125) translateY(-125%);
	}
}
.control-hint > input.input-xl:not(:-moz-placeholder-shown) {
	padding-top: 0.7rem;
	& ~ label {
  	transform: scale(0.8125) translateY(-135%);
	}
}
.control-hint-border > input:not(.input-xl):not(:-moz-placeholder-shown) ~ label {
	transform: scale(0.8125) translateY(-160%);
}
.control-hint-border > input.input-xl:not(:-moz-placeholder-shown) ~ label {
	transform: scale(0.8125) translateY(-185%);
}
.control-hint > textarea:not(:-moz-placeholder-shown) {
	padding-top: 1.2rem;
	& ~ label {
  	transform: scale(0.8125) translateY(-30%);
	}
}
.control-hint-border > textarea:not(:-moz-placeholder-shown) {
	padding-top: 0.7rem;
	& ~ label {
		transform: scale(0.8125) translateY(-85%);
	}
}
.control-hint > input:not(.input-xl):focus,
.control-hint > input:not(.input-xl):not(:placeholder-shown) {
	padding-top: 0.7rem;
	& ~ label {
  	transform: scale(0.8125) translateY(-125%);
	}
}
.control-hint > input.input-xl:focus,
.control-hint > input.input-xl:not(:placeholder-shown) {
	padding-top: 0.7rem;
	& ~ label {
  	transform: scale(0.8125) translateY(-135%);
	}
}
.control-hint-border > input:not(.input-xl):focus ~ label,
.control-hint-border > input:not(.input-xl):not(:placeholder-shown) ~ label {
	transform: scale(0.8125) translateY(-195%);
}
.control-hint-border > input.input-xl:focus ~ label,
.control-hint-border > input.input-xl:not(:placeholder-shown) ~ label {
	transform: scale(0.8125) translateY(-210%);
}
.control-hint > textarea:focus,
.control-hint > textarea:not(:placeholder-shown) {
	padding-top: 1.2rem;
	& ~ label {
  	transform: scale(0.8125) translateY(-30%);
	}
}
.control-hint-border > textarea:focus,
.control-hint-border > textarea:not(:placeholder-shown) {
	padding-top: 0.7rem;
	& ~ label {
		transform: scale(0.8125) translateY(-110%);
	}
}

.control-width-xs {
	width: 1.5rem;
}
.control-width-sm {
	width: 1.75rem;
}
.control-width-md {
	width: 2.125rem;
}
.control-width-lg {
	width: 2.475rem;
}
.control-width-xl {
	width: 2.825rem;
}
.control-height-xs {
	height: 1.5rem;
}
.control-height-sm {
	height: 1.75rem;
}
.control-height-md {
	height: 2.125rem;
}
.control-height-lg {
	height: 2.475rem;
}
.control-height-xl {
	height: 2.825rem;
}


*[class^=text].success,
*[class^=control-label].success,
.success label:not([class^=toggle-button] label):not([class^=toggle-switch] label):not([class^=progress-label]),
.success *[class^=text],
.success *[class^=control-label] {
  color: var(--text-success) !important;
}

.control.success,
*[class^=input].success,
*[class^=button].success,
*[class^=checkbox].success label,
*[class^=radio].success label,
*[class^=toggle-button].success label,
*[class^=toggle-switch].success label,
.success .control,
.success *[class^=input],
.success *[class^=button],
.success *[class^=checkbox] label,
.success *[class^=radio] label,
.success *[class^=toggle-button] label,
.success *[class^=toggle-switch] label {
  border-color: var(--control-border-success);
}
/* Button states */
*[class^=button].success,
.success *[class^=button] {
 	background-color: var(--control-background-success);
}
*[class^=button].success:hover,
.success *[class^=button]:hover {
 	background-color: var(--control-background-hover-success);
}
*[class^=button].success:focus,
.success *[class^=button]:focus {
 	background-color: var(--control-background-focus-success);
}
*[class^=button].success:active,
.success *[class^=button]:active {
 	background-color: var(--control-background-active-success);
}

/* Toggle Button states */
*[class^=toggle-button].success label,
.success *[class^=toggle-button] label {
	background-color: var(--control-background-success);
}
*[class^=toggle-button].success input:checked + label,
.success *[class^=toggle-button] input:checked + label {
  background-color: var(--control-background-active-success);
}
*[class^=toggle-button].success input + label:focus,
.success *[class^=toggle-button] input + label:focus {
  background-color: var(--control-background-focus-success);
}

/* Toggle Switch states */
*[class^=toggle-switch].success input + label,
.success *[class^=toggle-switch] input + label {
  background-color: var(--control-background-inactive-success);
}
*[class^=toggle-switch].success input:checked + label,
.success *[class^=toggle-switch] input:checked + label {
  background-color: var(--control-background-success);
}
*[class^=toggle-switch].success input + label > .toggle-switch-button,
.success *[class^=toggle-switch] input + label > .toggle-switch-button {
  background-color: var(--control-background-inactive-secondary-success);
}
*[class^=toggle-switch].success input:checked + label > .toggle-switch-button,
.success *[class^=toggle-switch] input:checked + label > .toggle-switch-button {
  background-color: var(--control-background-secondary-success);
}
*[class^=toggle-switch].success input + label:focus,
.success *[class^=toggle-switch] input + label:focus {
  background-color: var(--control-background-focus-success);
}

/* Input Range states */
.range.success::-webkit-slider-runnable-track,
.success .range::-webkit-slider-runnable-track {
	background-color: var(--control-background-success);
}
.range.success:focus::-webkit-slider-runnable-track,
.success .range:focus::-webkit-slider-runnable-track {
	background-color: var(--control-background-focus-success);
}
.range.success::-webkit-slider-thumb,
.success .range::-webkit-slider-thumb {
	outline-color: var(--control-border-success);
}

.range.success::-moz-range-track,
.success .range::-moz-range-track {
	background-color: var(--control-background-success);
}
.range.success:focus::-moz-range-track,
.success .range:focus::-moz-range-track {
	background-color: var(--control-background-focus-success);
}
.range.success::-moz-range-thumb,
.success .range::-moz-range-thumb {
  outline-color: var(--control-border-success);
}

.range-series.success,
.success .range-series {
  color: var(--control-background-success);
}


*[class^=text].warning,
*[class^=control-label].warning,
.warning label:not([class^=toggle-button] label):not([class^=toggle-switch] label):not([class^=progress-label]),
.warning *[class^=text],
.warning *[class^=control-label] {
  color: var(--text-warning) !important;
}

.control.warning,
*[class^=input].warning,
*[class^=button].warning,
*[class^=checkbox].warning label,
*[class^=radio].warning label,
*[class^=toggle-button].warning label,
*[class^=toggle-switch].warning label,
.warning .control,
.warning *[class^=input],
.warning *[class^=button],
.warning *[class^=checkbox] label,
.warning *[class^=radio] label,
.warning *[class^=toggle-button] label,
.warning *[class^=toggle-switch] label {
  border-color: var(--control-border-warning);
}
/* Button states */
*[class^=button].warning,
.warning *[class^=button] {
 	background-color: var(--control-background-warning);
}
*[class^=button].warning:hover,
.warning *[class^=button]:hover {
 	background-color: var(--control-background-hover-warning);
}
*[class^=button].warning:focus,
.warning *[class^=button]:focus {
 	background-color: var(--control-background-focus-warning);
}
*[class^=button].warning:active,
.warning *[class^=button]:active {
 	background-color: var(--control-background-active-warning);
}

/* Toggle Button states */
*[class^=toggle-button].warning label,
.warning *[class^=toggle-button] label {
	background-color: var(--control-background-warning);
}
*[class^=toggle-button].warning input:checked + label,
.warning *[class^=toggle-button] input:checked + label {
  background-color: var(--control-background-active-warning);
}
*[class^=toggle-button].warning input + label:focus,
.warning *[class^=toggle-button] input + label:focus {
  background-color: var(--control-background-focus-warning);
}

/* Toggle Switch states */
*[class^=toggle-switch].warning input + label,
.warning *[class^=toggle-switch] input + label {
  background-color: var(--control-background-inactive-warning);
}
*[class^=toggle-switch].warning input:checked + label,
.warning *[class^=toggle-switch] input:checked + label {
  background-color: var(--control-background-warning);
}
*[class^=toggle-switch].warning input + label > .toggle-switch-button,
.warning *[class^=toggle-switch] input + label > .toggle-switch-button {
  background-color: var(--control-background-inactive-secondary-warning);
}
*[class^=toggle-switch].warning input:checked + label > .toggle-switch-button,
.warning *[class^=toggle-switch] input:checked + label > .toggle-switch-button {
  background-color: var(--control-background-secondary-warning);
}
*[class^=toggle-switch].warning input + label:focus,
.warning *[class^=toggle-switch] input + label:focus {
  background-color: var(--control-background-focus-warning);
}

/* Input Range states */
.range.warning::-webkit-slider-runnable-track,
.warning .range::-webkit-slider-runnable-track {
	background-color: var(--control-background-warning);
}
.range.warning:focus::-webkit-slider-runnable-track,
.warning .range:focus::-webkit-slider-runnable-track {
	background-color: var(--control-background-focus-warning);
}
.range.warning::-webkit-slider-thumb,
.warning .range::-webkit-slider-thumb {
	outline-color: var(--control-border-warning);
}

.range.warning::-moz-range-track,
.warning .range::-moz-range-track {
	background-color: var(--control-background-warning);
}
.range.warning:focus::-moz-range-track,
.warning .range:focus::-moz-range-track {
	background-color: var(--control-background-focus-warning);
}
.range.warning::-moz-range-thumb,
.warning .range::-moz-range-thumb {
  outline-color: var(--control-border-warning);
}

.range-series.warning,
.warning .range-series {
  color: var(--control-background-warning);
}


*[class^=text].danger,
*[class^=control-label].danger,
.danger label:not([class^=toggle-button] label):not([class^=toggle-switch] label):not([class^=progress-label]),
.danger *[class^=text],
.danger *[class^=control-label] {
  color: var(--text-danger) !important;
}

.control.danger,
*[class^=input].danger,
*[class^=button].danger,
*[class^=checkbox].danger label,
*[class^=radio].danger label,
*[class^=toggle-button].danger label,
*[class^=toggle-switch].danger label,
.danger .control,
.danger *[class^=input],
.danger *[class^=button],
.danger *[class^=checkbox] label,
.danger *[class^=radio] label,
.danger *[class^=toggle-button] label,
.danger *[class^=toggle-switch] label {
  border-color: var(--control-border-danger);
}
/* Button states */
*[class^=button].danger,
.danger *[class^=button] {
 	background-color: var(--control-background-danger);
}
*[class^=button].danger:hover,
.danger *[class^=button]:hover {
 	background-color: var(--control-background-hover-danger);
}
*[class^=button].danger:focus,
.danger *[class^=button]:focus {
 	background-color: var(--control-background-focus-danger);
}
*[class^=button].danger:active,
.danger *[class^=button]:active {
 	background-color: var(--control-background-active-danger);
}

/* Toggle Button states */
*[class^=toggle-button].danger label,
.danger *[class^=toggle-button] label {
	background-color: var(--control-background-danger);
}
*[class^=toggle-button].danger input:checked + label,
.danger *[class^=toggle-button] input:checked + label {
  background-color: var(--control-background-active-danger);
}
*[class^=toggle-button].danger input + label:focus,
.danger *[class^=toggle-button] input + label:focus {
  background-color: var(--control-background-focus-danger);
}

/* Toggle Switch states */
*[class^=toggle-switch].danger input + label,
.danger *[class^=toggle-switch] input + label {
  background-color: var(--control-background-inactive-danger);
}
*[class^=toggle-switch].danger input:checked + label,
.danger *[class^=toggle-switch] input:checked + label {
  background-color: var(--control-background-danger);
}
*[class^=toggle-switch].danger input + label > .toggle-switch-button,
.danger *[class^=toggle-switch] input + label > .toggle-switch-button {
  background-color: var(--control-background-inactive-secondary-danger);
}
*[class^=toggle-switch].danger input:checked + label > .toggle-switch-button,
.danger *[class^=toggle-switch] input:checked + label > .toggle-switch-button {
  background-color: var(--control-background-secondary-danger);
}
*[class^=toggle-switch].danger input + label:focus,
.danger *[class^=toggle-switch] input + label:focus {
  background-color: var(--control-background-focus-danger);
}

/* Input Range states */
.range.danger::-webkit-slider-runnable-track,
.danger .range::-webkit-slider-runnable-track {
	background-color: var(--control-background-danger);
}
.range.danger:focus::-webkit-slider-runnable-track,
.danger .range:focus::-webkit-slider-runnable-track {
	background-color: var(--control-background-focus-danger);
}
.range.danger::-webkit-slider-thumb,
.danger .range::-webkit-slider-thumb {
	outline-color: var(--control-border-danger);
}

.range.danger::-moz-range-track,
.danger .range::-moz-range-track {
	background-color: var(--control-background-danger);
}
.range.danger:focus::-moz-range-track,
.danger .range:focus::-moz-range-track {
	background-color: var(--control-background-focus-danger);
}
.range.danger::-moz-range-thumb,
.danger .range::-moz-range-thumb {
  outline-color: var(--control-border-danger);
}

.range-series.danger,
.danger .range-series {
  color: var(--control-background-danger);
}


*[class^=text].disabled,
*[class^=control-label].disabled,
.disabled-group label,
.disabled-group *[class^=text],
.disabled-group *[class^=control-label] {
  color: hsl(0, 0%, 63.1%) !important;
}

*[class^=input][disabled],
*[class^=button][disabled],
*[class^=checkbox] input[disabled] + label,
*[class^=radio] input[disabled] + label,
*[class^=toggle-button] input[disabled] + label,
*[class^=toggle-switch] input[disabled] + label,
.control[disabled],
*[class^=input].disabled,
*[class^=button].disabled,
*[class^=checkbox].disabled label,
*[class^=radio].disabled label,
*[class^=toggle-button].disabled label,
*[class^=toggle-switch].disabled label,
.disabled-group .control,
.disabled-group *[class^=input],
.disabled-group *[class^=button],
.disabled-group *[class^=checkbox] label,
.disabled-group *[class^=radio] label,
.disabled-group *[class^=toggle-button] label,
.disabled-group *[class^=toggle-switch] label {
  color: hsl(0, 0%, 63.1%) !important;
  background-color: hsl(0, 0%, 83.1%) !important;
  border-color: hsl(0, 0%, 83.1%) !important;
  box-shadow: none !important;
}

select[disabled],
select.disabled,
.disabled-group select {
	background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='hsl(0, 0%, 63.1%)' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E") !important;
}

*[class^=checkbox] input[disabled]:checked + label,
*[class^=checkbox].disabled input:checked + label,
.disabled-group *[class^=checkbox] input:checked + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='hsl(0, 0%, 63.1%)' d='M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z'/></svg>") !important;
}
*[class^=checkbox] input[disabled]:indeterminate + label,
*[class^=checkbox].disabled input:indeterminate + label,
.disabled-group *[class^=checkbox] input:indeterminate + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='hsl(0, 0%, 63.1%)' d='M 6 10 h 12 v 4 h -12 Z'/></svg>") !important;
}
*[class^=radio] input[disabled]:checked + label,
*[class^=radio].disabled input:checked + label,
.disabled-group *[class^=radio] input:checked + label {
  background-image: url("data:image/svg+xml;charset=utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><circle fill='hsl(0, 0%, 63.1%)' cx='12' cy='12' r='7'/></svg>") !important;
}

*[class^=toggle-switch] input[disabled] + label .toggle-switch-button,
*[class^=toggle-switch].disabled label .toggle-switch-button,
.disabled-group *[class^=toggle-switch] label .toggle-switch-button {
  background-color: hsl(0, 0%, 63.1%) !important;
}

.range[disabled]::-webkit-slider-runnable-track,
.range.disabled::-webkit-slider-runnable-track,
.disabled-group .range::-webkit-slider-runnable-track {
  background-color: hsl(0, 0%, 83.1%) !important;
}

.range[disabled]::-webkit-slider-thumb,
.range.disabled::-webkit-slider-thumb,
.disabled-group .range::-webkit-slider-thumb {
  background-color: hsl(0, 0%, 83.1%) !important;
	outline: none !important;
}

.range[disabled]::-moz-range-track,
.range.disabled::-moz-range-track,
.disabled-group .range::-moz-range-track {
  background-color: hsl(0, 0%, 83.1%) !important;
}

.range[disabled]::-moz-range-thumb,
.range.disabled::-moz-range-thumb,
.disabled-group .range::-moz-range-thumb {
  background-color: hsl(0, 0%, 83.1%) !important;
	outline: none !important;
}

.range-series.disabled,
.disabled-group .range-series {
  color: hsl(0, 0%, 83.1%) !important;
}


.accessibility a:focus:not([disabled]),
.accessibility input:not([type=range]):focus:not([disabled]),
.accessibility button:focus:not([disabled]),
.accessibility select:focus:not([disabled]),
.accessibility textarea:focus:not([disabled]),
.accessibility *[class^=checkbox] input:not([disabled]) + label:focus,
.accessibility *[class^=radio] input:not([disabled]) + label:focus,
.accessibility *[class^=toggle-button] input:not([disabled]) + label:focus,
.accessibility *[class^=toggle-switch] input:not([disabled]) + label:focus,
.accessibility .control:not([disabled]):focus {
	outline: none;
  box-shadow: 0 0 0 0.125rem var(--accessibility-focus);
}

.accessibility .range:focus:not([disabled]) {
	outline: none;
}
.accessibility .range:focus:not([disabled])::-webkit-slider-thumb {
  box-shadow: 0 0 0 0.1875rem var(--accessibility-focus);
}
.accessibility .range:focus:not([disabled])::-moz-range-thumb {
  box-shadow: 0 0 0 0.1875rem var(--accessibility-focus);
}
.accessibility.accessibility-group *:focus:not([disabled]),
.accessibility .accessibility-group *:focus:not([disabled]) {
	position: relative;
	z-index: var(--layer-top);
}
